{
  "name": "freebox-os-client",
  "version": "0.0.1",
  "description": "A NodeJS client for the FreeboxOS API.",
  "main": "freebox-os-client.js",
  "scripts": {},
  "repository": {
    "type": "git",
    "url": "https://github.com/trusta/freebox-os-client"
  },
  "keywords": [],
  "author": {
    "name": "Florent Boisselier",
    "email": "fboisselier52@gmail.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/trusta/freebox-os-client/issues"
  },
  "dependencies": {
    "request": "^2.40.0"
  },
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-cli": "~0.1.9",
    "grunt-complexity": "^0.1.71",
    "grunt-contrib-jshint": "^0.10.0",
    "grunt-contrib-watch": "^0.5.3",
    "jshint-stylish": "^0.4.0",
    "load-grunt-tasks": "^0.6.0",
    "time-grunt": "^1.0.0"
  },
  "readme": "freebox-os-client\n=====================\n\nA NodeJS client for the FreeboxOS API.\n\nDocumentation : http://dev.freebox.fr/sdk/os/\n\n---------------------\n\n## ~~Installation~~ - Not actually\n\n~~This module is installed via npm:~~\n\n``` bash\n$ npm install freebox-os-client\n```\n\n## Usage\n\n### Query a endpoint\nAll the methods have the same parameters :\n\n1. **routeParam :** The parameters in the route of the endpoint\n2. **bodyParam :** The data to send to the endpoint\n3. **sessiontoken :** The session token needed if the endpoint require authentication\n4. **callback :** The callback function\n\n\n#### Example\n``` js\nvar routeParam = {\n    track_id: 42\n};\nvar bodyParam = {\n    app_id: \"fr.freebox.testapp\",\n    password: \"d4da8517c2c25b1b145f2e5ba91bd0589fc0053d\"\n};\nvar sessionToken = \"35JYdQSvkcBYK84IFMU7H86clfhS75OzwlQrKlQN1gBch\\/Dd62RGzDpgC7YB9jB2\";\nfunction callback(response) {\n    // ...\n}\n\nclient.endpointMethod(routeParam,bodyParam,sessiontoken,callback);\n```\n\n### The callback function\n#### The default callback function\nThe default callback function is :\n``` js\nfunction defaultCallback(response) {\n    console.log(JSON.stringify(response));\n}\n```\n\n#### Define a callback function\nThe callback function has only one parameter : **response**\n\nThe response convention is : \n\n1. *On communication success :* The same as the freebox, see the [documentation](http://dev.freebox.fr/sdk/os/#APIResponse)\n2. *On communication error :* The response returned looks :\n\n``` js\n    response = {\n        success: false, // Always set to false\n        msg: Forbidden // The error\n        error_code: 403// The status code of the response\n    }\n```\n\n## Example Usage\n\n#### Register the application\n``` js\nvar freebox = {\n    url: 'mafreebox.freebox.fr',\n    port: 80\n};\nvar tokenRequest = {\n    app_id: 'fr.freebox.clientapp',\n    app_name: 'Client App',\n    app_version: '0.0.7',\n    device_name: 'Pc de Xavier'\n};\n\nvar client = require('freebox-os-client')(freebox);\nclient.requestAuthorization(null,tokenRequest,null,function(response) {\n    console.log(JSON.stringify(response));\n});\n```\n\nIn this case, the callback function is the default so there is the same result with :\n``` js\nvar freebox = {\n    url: 'mafreebox.freebox.fr',\n    port: 80\n};\nvar tokenRequest = {\n    app_id: 'fr.freebox.clientapp',\n    app_name: 'Client App',\n    app_version: '0.0.7',\n    device_name: 'Pc de Xavier'\n};\n\nvar client = require('freebox-os-client')(freebox);\nclient.requestAuthorization(null,tokenRequest);\n```\n\n\n#### Track authorization progress\n``` js\nvar freebox = {\n    url: 'mafreebox.freebox.fr',\n    port: 80\n};\nvar app = {\n    app_id: 'fr.freebox.clientapp',\n    app_token: '35JYdQSvkcBYK84IFMU7H86clfhS75OzwlQrKlQN1gBch\\/Dd62RGzDpgC7YB9jB2'\n};\nvar routeParam = {\n    track_id: app.track_id\n};\n\nvar client = require('freebox-os-client')(freebox);\nclient.trackAuthorizationProgress(routeParam);\n```\n\n\n#### Login\n``` js\nvar crypto = require('crypto');\n\nvar freebox = {\n    url: 'mafreebox.freebox.fr',\n    port: 80\n};\nvar app = {\n    app_id: 'fr.freebox.clientapp',\n    app_token: '35JYdQSvkcBYK84IFMU7H86clfhS75OzwlQrKlQN1gBch\\/Dd62RGzDpgC7YB9jB2'\n};\n\nvar client = require('freebox-os-client')(freebox);\nclient.getChallenge(null, null, null, function(response) {\n    if (response.success) {\n        var sessionStart = {\n            app_id: app.app_id,\n            app_version: app.app_version,\n            password: crypto.createHmac('sha1', app.app_token).update(response.result.challenge).digest('hex')\n        };\n        client.openSession(null, sessionStart);\n    }\n});\n```\n\n\n## API\n\n#### Authentication\n\nName                                                                      |    Method\n:------------------------------------------------------------------------:|:----------------------------------------:\n[Request authorization](http://dev.freebox.fr/sdk/os/login/#request-authorization)|requestAuthorization\n[Track authorization progress](http://dev.freebox.fr/sdk/os/login/#track-authorization-progress)|trackAuthorizationProgress\n[Getting the challenge value](http://dev.freebox.fr/sdk/os/login/#getting-the-challenge-value)|getChallenge\n[Opening a session](http://dev.freebox.fr/sdk/os/login/#opening-a-session)|openSession\n[Closing the current session](http://dev.freebox.fr/sdk/os/login/#closing-the-current-session)|closeSession\n    \n#### Download\n\nName                                                                      |    Method\n:------------------------------------------------------------------------:|:----------------------------------------:\n[Retrieve all Download tasks](http://dev.freebox.fr/sdk/os/download/#get--api-v3-downloads-)|getAllDownloads\n[Retrieve a Download task](http://dev.freebox.fr/sdk/os/download/#get--api-v3-downloads-{id})|getDownload\n[Delete a Download task](http://dev.freebox.fr/sdk/os/download/#delete--api-v3-downloads-{id})|deleteDownload\n[Erase a Download task](http://dev.freebox.fr/sdk/os/download/#delete--api-v3-downloads-{id}-erase)|eraseDownload\n[Update a Download task](http://dev.freebox.fr/sdk/os/download/#update-a-download-task)|updateDownload\n[Get download log](http://dev.freebox.fr/sdk/os/download/#get-download-log)|getDownloadLog\n[Adding a new Download task by url](http://dev.freebox.fr/sdk/os/download/#adding-by-url)|addDownloadByUrl\n[Get the Download Stats](http://dev.freebox.fr/sdk/os/download/#get-the-download-stats)|getDownloadStats\n[Get the list of files for a given Download](http://dev.freebox.fr/sdk/os/download/#get-the-list-of-files-for-a-given-download)|getFilesOfDownload\n[Change the priority of a Download File](http://dev.freebox.fr/sdk/os/download/#change-the-priority-of-a-download-file)|changePriorityOfDownloadFile\n    \n\n## TODO\n\n####Download\n+ Adding a new Download task by file upload\n+ UNSTABLES\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2014 trusta\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
  "readmeFilename": "README.md",
  "_id": "freebox-os-client@0.0.1",
  "dist": {
    "shasum": "c64dd7644e8ab0e048297c1f24a12f9a2df18be8"
  },
  "_from": "freebox-os-client@",
  "_resolved": "https://registry.npmjs.org/freebox-os-client/-/freebox-os-client-0.0.1.tgz"
}
